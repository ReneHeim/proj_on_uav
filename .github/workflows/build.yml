name: Build Package

on:
  push:
    branches: [main, dev]
  pull_request:
    branches: [main, dev]

env:
  PYTHON_VERSION: "3.12"

jobs:
  build:
    name: Build Package
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ env.PYTHON_VERSION }}

      - name: Install build dependencies
        run: |
          python -m pip install --upgrade pip
          pip install build==1.0.3 twine==4.0.2 setuptools>=65.0

      - name: Build package
        run: |
          echo "Building package..."
          python -m build --wheel --sdist

      - name: Check package integrity
        run: |
          echo "Checking package integrity..."
          
          if [ ! -d "dist" ] || [ -z "$(ls -A dist)" ]; then
            echo "Error: No distribution files found"
            exit 1
          fi
          
          echo "Distribution files found:"
          ls -la dist/
          
          if ! twine check dist/*; then
            echo "Warning: twine check failed, performing basic validation..."
            
            for file in dist/*; do
              if [[ $file == *.whl ]]; then
                echo "Checking wheel file: $file"
                python -m zipfile -l "$file" > /dev/null || {
                  echo "Error: Invalid wheel file $file"
                  exit 1
                }
              elif [[ $file == *.tar.gz ]]; then
                echo "Checking source distribution: $file"
                tar -tzf "$file" > /dev/null || {
                  echo "Error: Invalid source distribution $file"
                  exit 1
                }
              fi
            done
            echo "Basic package validation completed"
          else
            echo "Package integrity check passed"
          fi

      - name: Test package installation
        run: |
          echo "Testing package installation..."
          
          WHEEL_FILE=$(find dist -name "*.whl" | head -1)
          
          if [ -z "$WHEEL_FILE" ]; then
            echo "Error: No wheel file found for testing"
            exit 1
          fi
          
          echo "Installing wheel: $WHEEL_FILE"
          pip install "$WHEEL_FILE"
          
          python -c "
          import sys
          print('Package installed successfully')
          print('Python version:', sys.version)
          
          try:
              print('Package import test: SKIPPED (no package specified)')
          except ImportError as e:
              print('Package import test: FAILED -', e)
          except Exception as e:
              print('Package import test: ERROR -', e)
          "

      - name: Upload build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ env.PYTHON_VERSION }}-${{ github.sha }}
          path: dist/
          retention-days: 30

      - name: Build summary
        if: always()
        run: |
          echo "Build Summary"
          echo "============="
          
          if [ -d "dist" ] && [ -n "$(ls -A dist)" ]; then
            echo "Build Status: SUCCESS"
            echo "Files created:"
            for file in dist/*; do
              if [ -f "$file" ]; then
                SIZE=$(stat -c%s "$file" 2>/dev/null || stat -f%z "$file" 2>/dev/null || echo "unknown")
                echo "  - $(basename "$file") (${SIZE} bytes)"
              fi
            done
          else
            echo "Build Status: FAILED - No distribution files created"
          fi
          
          echo "Build completed at: $(date -u '+%Y-%m-%d %H:%M:%S UTC')"